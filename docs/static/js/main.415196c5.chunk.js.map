{"version":3,"sources":["app/config/index.js","app/services/firebase/firebase.services.js","app/services/firebase/auth.services.js","app/services/firebase/firestore.services.js","app/services/proxy.services.js","app/utilities/RouteWithLayout.js","app/routes/index.js","app/components/layout/Footer.js","app/components/layout/CourtesyNavigation.js","app/components/layout/Logo.js","app/components/layout/Header.js","app/layouts/BaseLayout.js","app/components/bookmark/BookmarksList.js","app/pages/BookmarksPage.js","app/pages/Home.js","app/components/message/MessagesList.js","app/pages/MessagesPage.js","app/components/pokemons/PokemonsList.js","app/pages/PokemonsPage.js","app/pages/SignInPage.js","app/pages/Register.js","app/App.js","app/index.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","React","createContext","useFirebase","useContext","FirebaseProvider","children","useState","firebase","apps","length","app","initializeApp","Provider","value","AuthContext","useAuth","AuthProvider","JSON","parse","localStorage","getItem","currentUser","setCurrentUser","auth","useEffect","unsubscribe","onAuthStateChanged","user","setItem","stringify","signInWithEmailAndPassword","email","password","a","console","log","code","content","errortype","signOut","FirestoreContext","useFirestore","FirestoreProvider","db","firestore","getMessages","query","collection","orderBy","get","querySnapshot","messages","docs","map","doc","uid","id","data","getBookmarks","bookmarks","getPokemons","pokemons","addBookmark","bookmark","ref","add","docRef","RouteWithLayout","component","layout","rest","render","routeProps","createElement","renderMergedProps","HREF_ORIGIN","window","location","origin","Footer","className","to","CourtesyNavigation","type","data-toggle","aria-haspopup","aria-expanded","src","photoURL","href","onClick","Logo","alt","Header","data-target","aria-controls","aria-label","activeClassName","BaseLayout","BookmarksList","setBookmarks","fetchData","key","data-id","image","title","class","provider","url","target","rel","BookmarksPage","Home","MessagesList","setMessages","msg","sender","MessagesPage","PokemonsList","setPokemons","pokemon","d","ata-id","pictureURL","name","width","scope","bestMove","evolution_next","shiny","PokemonsPage","SignInPage","loginError","setLoginError","txtEmail","txtPassword","signInForm","setSignInForm","handleSubmit","ev","preventDefault","result","handleInputChange","onSubmit","role","htmlFor","aria-describedby","onChange","Register","passwordConfirmation","setPasswordConfirmation","txtUsername","txtConfirmPassword","registerForm","setRegisterForm","required","App","basename","exact","path","from","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.415196c5.chunk.js","sourcesContent":["export const firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};","import React, { useContext, useState } from 'react';\nimport firebase from 'firebase/app';\n\nimport { firebaseConfig } from '../../config';\n\nconst FirebaseContext = React.createContext(null);\nconst useFirebase = () => useContext(FirebaseContext);\n\nconst FirebaseProvider = ({children}) => {\n  const [app] = useState(!firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app());\n\n  return (\n    <FirebaseContext.Provider value={{app}}>\n      {children}\n    </FirebaseContext.Provider>\n  )\n};\n\nexport {\n  FirebaseContext,\n  FirebaseProvider,\n  useFirebase,\n};\n","import { default as React, useContext, useEffect, useState } from 'react';\nimport 'firebase/auth';\n\nimport { useFirebase } from './firebase.services';\n\nconst AuthContext = React.createContext(null);\nconst useAuth = () => useContext(AuthContext);\n\n/*\nhttps://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithemailandpassword\n*/\n\nconst AuthProvider = ({children}) => {\n  const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('corona-festival:currentUser')));\n  const { app } = useFirebase();\n  const auth = app.auth();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      localStorage.setItem('corona-festival:currentUser', JSON.stringify(user));\n      setCurrentUser(user);\n    });\n\n    return () => {\n      unsubscribe();\n    }\n  }, []);\n\n  const signInWithEmailAndPassword = async (email, password) => {\n    try {\n      return await auth.signInWithEmailAndPassword(email, password);\n    } catch (error) {\n      console.log(error);\n      // Error handling login with email\n      switch (error.code) {\n        case \"auth/user-not-found\":\n          error.content = \"The user doesn't exists.\";\n          break;\n\n        case \"auth/wrong-password\":\n          error.content = \"You gave in a wrong password.\";\n          break;\n\n        case \"auth/user-disabled\":\n          error.content = \"You're account is banned/blocked.\";\n          break;\n\n        case \"auth/invalid-email\":\n          error.content = \"You gave in a wrong email.\";\n          break;\n          \n        default:\n          error.content = \"Something went wrong.\";\n          break;\n      }\n      error.errortype = true;\n      return error;\n    }    \n  };\n\n  const signOut = async () => {\n    localStorage.setItem('corona-festival:currentUser', null);\n    return await auth.signOut();\n  };\n\n  return (\n    <AuthContext.Provider value={{currentUser,signInWithEmailAndPassword,signOut}}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport {\n  AuthContext,\n  AuthProvider,\n  useAuth,\n};\n","import React, { useContext } from 'react';\nimport 'firebase/firestore';\n\nimport { useFirebase } from './firebase.services';\n\nconst FirestoreContext = React.createContext(null);\nconst useFirestore = () => useContext(FirestoreContext);\n\nconst FirestoreProvider = ({children}) => {\n  const { app } = useFirebase();\n  const db = app.firestore();\n\n  const getMessages = async () => {\n    const query = db.collection('messages').orderBy('createdAt', 'desc');\n    const querySnapshot = await query.get();\n    const messages = querySnapshot.docs.map((doc) => {\n      return {\n        uid: doc.id,\n        ...doc.data()\n      }\n    });\n    return messages;\n  };\n\n  const getBookmarks = async () => {\n    const query = db.collection('bookmarks').orderBy('createdAt', 'desc');\n    const querySnapshot = await query.get();\n    const bookmarks = querySnapshot.docs.map((doc) => {\n      return {\n        uid: doc.id,\n        ...doc.data()\n      }\n    });\n    return bookmarks;\n  };\n\n  const getPokemons = async () => {\n    const query = db.collection('pokemons').orderBy('name', 'asc');\n    const querySnapshot = await query.get();\n    const pokemons = querySnapshot.docs.map((doc) => {\n      return {\n        uid: doc.id,\n        ...doc.data()\n      }\n    });\n    return pokemons;\n  };\n\n  const addBookmark = async (bookmark) => {\n    const ref = db.collection('bookmarks');\n    const docRef = await ref.add(bookmark);\n    return docRef;\n  };\n\n  return (\n    <FirestoreContext.Provider value={{addBookmark, getBookmarks, getMessages, getPokemons}}>\n      {children}\n    </FirestoreContext.Provider>\n  );\n};\n\nexport {\n  FirestoreContext,\n  FirestoreProvider,\n  useFirestore,\n};","import React, { createContext, useContext } from 'react';\n\nconst ProxyContext = createContext();\nconst useProxyContext = () => useContext(ProxyContext);\n\nconst ProxyProvider = ({children}) => {\n  const PROXY_SEO_URL = 'https://nodejs-nmd-crawler.herokuapp.com/proxy/seo?url=';\n\n  const getSEOFromUrl = async (url) => {\n    const response = await fetch(`${PROXY_SEO_URL}${url}`);\n    let jsonData = await response.json();\n    const jsonDataString = JSON.stringify(jsonData).replace(/http:/gi, 'https:');\n    jsonData = JSON.parse(jsonDataString);\n    return jsonData;\n  };\n\n  return (\n    <ProxyContext.Provider value={{getSEOFromUrl}}>\n      {children}\n    </ProxyContext.Provider>\n  );\n};\n\nexport {\n  ProxyContext,\n  ProxyProvider,\n  useProxyContext,\n};\n","import React, {} from 'react';\nimport { Route as ReactRoute } from 'react-router';\n\nconst renderMergedProps = (component, layout, routeProps) => {\n  return (layout) ? React.createElement(layout, routeProps, React.createElement(component, routeProps)) : React.createElement(component, routeProps);\n};\n\nconst RouteWithLayout = ({ component, layout, ...rest }) => {\n  return (\n    <ReactRoute {...rest} render={routeProps => {\n      return renderMergedProps(component, layout, routeProps);\n    }}/>\n  );\n};\n\nexport default RouteWithLayout;\n","export const LANDING = '/';\nexport const HOME = '/home';\nexport const BOOKMARKS = '/bookmarks';\nexport const MESSAGES = '/messages';\nexport const POKEMONS = '/pokemons';\nexport const CATEGORIES = '/categories';\nexport const BROWSE = '/browse';\nexport const STREAM = '/stream';\nexport const SETTINGS = '/settings';\nexport const AUTH_SIGN_IN = '/auth/signin';\nexport const AUTH_SIGN_OUT = '/auth/signout';\nexport const REGISTER = '/auth/register';\n\nexport const PREFIX = '/eindwerk-pgmgent-thibdema';\nexport const HREF_ORIGIN = window.location.origin;","import React, { } from 'react';\nimport { Link  } from 'react-router-dom';\n\nimport * as Routes from '../../routes';\n\nimport './Footer.scss';\n\nconst Footer = ({children}) => {\n  return (\n    <footer className=\"app-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-4 col-lg-3\">\n            <ul className=\"nav flex-column\">\n              <li className=\"nav-item\">\n                <Link to={Routes.HOME} className=\"nav-link\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={Routes.MESSAGES} className=\"nav-link\">Messages</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={Routes.BOOKMARKS} className=\"nav-link\">Bookmarks</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={Routes.AUTH_SIGN_IN} className=\"nav-link\">Sign-In</Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-12 col-md-4 col-lg-3\">3</div>\n          <div className=\"col-12 col-md-4 col-lg-6\">6</div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../../routes';\n\nimport { useAuth } from '../../services/firebase/auth.services';\n\nimport './CourtesyNavigation.scss';\n\nconst CourtesyNavigation = ({children}) => {\n  const {currentUser, signOut} = useAuth();\n\n  return (\n    <ul className=\"navbar-nav courtesy-navigation\">\n      <li className=\"nav-item\">\n        {!!currentUser\n        ? <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              <img className=\"profile__picture\" src={currentUser.photoURL} />\n            </button>\n            <div className=\"dropdown-menu dropdown-menu-right\">\n              <Link to={Routes.SETTINGS} className=\"dropdown-item\">Settings</Link>\n              <div className=\"dropdown-divider\"></div>\n              <a className=\"dropdown-item\" href=\"#\" onClick={signOut}>Logout</a>\n            </div>\n          </div>\n        : \n          <div className=\"navbar-nav align-items-center\">\n            <Link className=\"nav-link\" to={Routes.AUTH_SIGN_IN}>Sign In</Link>\n            /\n            <Link className=\"nav-link\" to={Routes.REGISTER}>Register</Link>\n          </div>\n        }        \n      </li>\n    </ul>\n  );\n};\n\nexport default CourtesyNavigation;\n","import React from 'react';\r\n\r\nimport { HREF_ORIGIN } from '../../routes';\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({type}) => {\r\n  return(\r\n      <img className=\"logo\" src={(type == \"text\") ? HREF_ORIGIN + \"/logo+text.png\" : HREF_ORIGIN + \"/logo.png\"} alt=\"logo Corona Festival\"></img>\r\n  );\r\n};\r\n\r\nexport default Logo;","import React, { } from 'react';\nimport { Link, NavLink  } from 'react-router-dom';\n\nimport CourtesyNavigation from './CourtesyNavigation';\nimport Logo from './Logo';\n\nimport * as Routes from '../../routes';\n\nimport './Header.scss';\n\nconst Header = ({children}) => {\n\n  return (\n    <header className=\"app-header\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light navigation\">\n        <div>\n          <Link to={Routes.LANDING} className=\"logo__link\"><Logo type=\"text\" /></Link>\n        </div>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse navitems\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto justify-content-end flex-grow-1\">\n            <li className=\"nav-item\">\n              <NavLink to={Routes.HOME} className=\"nav-link\" activeClassName=\"active\">Home</NavLink>\n            </li> \n            {/* <li className=\"nav-item\">\n              <NavLink to={Routes.MESSAGES} className=\"nav-link\" activeClassName=\"active\">Messages</NavLink>\n            </li> \n            <li className=\"nav-item\">\n              <NavLink to={Routes.BOOKMARKS} className=\"nav-link\" activeClassName=\"active\">Bookmarks</NavLink>\n            </li>          \n            <li className=\"nav-item\">\n              <NavLink to={Routes.POKEMONS} className=\"nav-link\" activeClassName=\"active\">Pokemons</NavLink>\n            </li>  */}\n            <li className=\"nav-item\">\n              <NavLink to={Routes.CATEGORIES} className=\"nav-link\" activeClassName=\"active\">Categories</NavLink>\n            </li> \n            <li className=\"nav-item\">\n              <NavLink to={Routes.BROWSE} className=\"nav-link\" activeClassName=\"active\">Browse</NavLink>\n            </li> \n            <li className=\"nav-item\">\n              <NavLink to={Routes.STREAM} className=\"nav-link\" activeClassName=\"active\">Stream</NavLink>\n            </li> \n            <li className=\"nav-item\">\n              <CourtesyNavigation />\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\n\nimport { Header, Footer } from '../components/layout';\n\nconst BaseLayout = ({children}) => (\n  <Fragment>\n    <Header />\n    <main className=\"app-main\">\n      {children}      \n    </main>\n    <Footer />\n  </Fragment>\n);\nexport default BaseLayout;","import React, { useEffect, useState, Fragment } from 'react';\nimport { useFirestore } from '../../services';\n\nimport './BookmarksList.scss';\n\nconst BookmarksList = () => {\n  const [bookmarks, setBookmarks] = useState();\n  const {getBookmarks} = useFirestore();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getBookmarks();\n      setBookmarks(data);\n    }\n\n    fetchData();\n  }, [getBookmarks]);\n\n  return (\n    <div className=\"row align-items-stretch bookmarks-list\">\n      {!!bookmarks\n      ? bookmarks.map((bookmark) => {\n        return (\n          <div className=\"col-12 col-md-6 col-lg-4 col-xl-3\" key={bookmark.uid}>\n            <div className=\"card bookmark\" data-id={bookmark.uid}>\n              <picture className=\"card-img-top bookmark__picture\">\n                {!!bookmark.image ? <img src={bookmark.image} alt={bookmark.title} /> : <Fragment></Fragment>}\n              </picture>\n              <div className=\"card-body\">              \n                <h6 class=\"card-subtitle mb-2 text-muted\">{bookmark.provider}</h6>\n                <h5 className=\"card-title  text-truncate\">{bookmark.title}</h5>                \n              </div>\n              <div className=\"card-body\">\n                <a href={bookmark.url} className=\"btn btn-primary\" target=\"_blank\" rel=\"noopener noreferrer\">Visit website</a>               \n              </div>\n            </div>\n          </div>\n        )\n      })\n      : <p>No bookmarks.</p>\n      }\n    </div>\n  )\n};\n\nexport default BookmarksList;","import React, { } from 'react';\n\nimport { BookmarksList } from '../components/bookmark';\n\nconst BookmarksPage = ({children}) => {\n  return (\n    <div className=\"page page--bookmarks\">\n      <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h1>Bookmarks</h1>\n            </div>\n          </div>\n        <BookmarksList />\n      </div>\n    </div>\n  );\n};\n\nexport default BookmarksPage;","import React, { } from 'react';\n\nimport './Home.scss';\n\nconst Home = ({children}) => {\n  return (\n    <div className=\"page page--home\">\n      <section className=\"pt-4 pt-md-11 featured\">\n        <div className=\"container\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-12 col-md-5 col-lg-6 order-md-2\">\n              Iets anders              \n            </div>\n            <div className=\"col-12 col-md-7 col-lg-6 order-md-1 aos-init aos-animate\">\n              <h1 className=\"display-3 text-center text-md-left\">\n                Welcome to <span className=\"font-weight-bold\">Firebase React Boilerplate</span>. <br />\n                Firebase everything.\n              </h1>              \n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { useFirestore } from '../../services';\n\nimport './MessagesList.scss';\n\nconst MessagesList = () => {\n  const [messages, setMessages] = useState();\n  const {getMessages} = useFirestore();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getMessages();\n      setMessages(data);\n    }\n\n    fetchData();    \n  }, [getMessages]);\n\n  return (\n    <div className=\"row messages-list\">\n    {!!messages \n      ? messages.map((msg) => {\n        return (\n          <div className=\"col-12\" key={msg.uid}>\n            <article className=\"row message\" data-id={msg.uid}>\n              <span className=\"col-3 message__sender\">\n                {msg.sender}\n              </span>\n              <div className=\"col-9 message__body\">\n                {msg.content}\n              </div>            \n            </article>\n          </div>\n        )\n      })\n      : <p>No messages</p>\n    }\n    </div>\n  );\n};\n\nexport default MessagesList;","import React, { } from 'react';\n\nimport { MessagesList } from '../components/message';\n\nconst MessagesPage = ({children}) => {\n  return (\n    <div className=\"page page--messages\">\n      <section className=\"pt-4 pt-md-11\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h1>Messages</h1>\n            </div>\n          </div>\n          <MessagesList />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default MessagesPage;","import React, {useEffect, useState} from 'react';\nimport { useFirestore } from '../../services/firebase/firestore.services';\n\nconst PokemonsList = () => {\n  const [pokemons, setPokemons] = useState();\n  const {getPokemons} = useFirestore();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getPokemons();\n      setPokemons(data);\n    };\n\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"row pokemons-list\">\n      {!!pokemons \n        ? pokemons.map((pokemon) => {\n          return (\n            <div className=\"col-12\" key={pokemon.uid}>\n              <div class=\"media\"d ata-id={pokemon.uid}>\n                <img src={pokemon.pictureURL} class=\"align-self-start mr-3\" alt={pokemon.name} width=\"148\" />\n                <div class=\"media-body\">\n                  <h5 class=\"mt-0\">{pokemon.name}</h5>\n                  <table class=\"table table-striped\">\n                    <tbody>\n                      <tr>\n                        <th scope=\"row\">Type</th>\n                        <td>{pokemon.type}</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Best Move</th>\n                        <td>{pokemon.bestMove}</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Next Evolution</th>\n                        <td>{pokemon.evolution_next}</td>\n                      </tr>                      \n                      <tr>\n                        <th scope=\"row\">Shiny</th>\n                        <td>{pokemon.shiny ? 'Yes' : 'No'}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )\n        })\n        : <p>No pokemons</p>\n      }\n    </div>\n  )\n};\n\nexport default PokemonsList;","import React, { } from 'react';\n\nimport './PokemonsPage.scss';\nimport { PokemonsList } from '../components/pokemons';\n\nconst PokemonsPage = ({children}) => {\n  return (\n    <div className=\"page page--pokemons\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1>Pokemons</h1>\n          </div>\n        </div>\n        <PokemonsList />\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonsPage;","import React, {useState} from 'react';\nimport { useAuth } from '../services/firebase/auth.services';\n\nimport './Signin.scss';\n\nconst SignInPage = ({children}) => {\n  const [loginError, setLoginError] = useState('');\n\n  const [signInForm, setSignInForm] = useState({\n    txtEmail: '',\n    txtPassword: ''\n  });\n  const {currentUser,signInWithEmailAndPassword,signOut} = useAuth();\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n\n    const result = await signInWithEmailAndPassword(signInForm.txtEmail, signInForm.txtPassword);\n    console.log(result);\n    (result.content) ? setLoginError(result.content) : setLoginError(false);\n  }\n\n  const handleInputChange = async (ev) => {\n    setSignInForm({\n      ...signInForm,\n      [ev.target.name]: ev.target.value\n    })\n  };\n\n  return (\n    <div className=\"page page--sign-in\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 offset-md-2 col-md-8 offset-lg-3 col-lg-6\">\n            <form onSubmit={(ev) => handleSubmit(ev)}>\n              {(loginError) ? <div className=\"alert alert-danger\" role=\"alert\">{loginError}</div> : ''}\n              <div className=\"form-group\">\n                <label htmlFor=\"txtEmail\">Email address</label>\n                <input type=\"email\" className=\"form-control\" id=\"txtEmail\" name=\"txtEmail\"  aria-describedby=\"emailHelp\" onChange={handleInputChange} value={signInForm.txtEmail} />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"txtPassword\">Password</label>\n                <input type=\"password\" className=\"form-control\" id=\"txtPassword\" name=\"txtPassword\" onChange={handleInputChange} value={signInForm.txtPassword} />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\n            </form>\n          </div>\n        </div>\n      </div>      \n    </div>\n  );\n};\n\nexport default SignInPage;","import React, {useState} from 'react';\r\nimport { useAuth } from '../services/firebase/auth.services';\r\n\r\nimport './Register.scss';\r\n\r\nconst Register = ({children}) => {\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\r\n  const [registerForm, setRegisterForm] = useState({\r\n    txtUsername: '',\r\n    txtEmail: '',\r\n    txtPassword: '',\r\n    txtConfirmPassword: ''\r\n  });\r\n\r\n  const {currentUser,signInWithEmailAndPassword,signOut} = useAuth();\r\n\r\n  const handleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    (registerForm.txtPassword === registerForm.txtConfirmPassword) ? await signInWithEmailAndPassword(registerForm.txtEmail, registerForm.txtPassword)\r\n      : setPasswordConfirmation('You gave in 2 different passwords.');\r\n  }\r\n\r\n  const handleInputChange = async (ev) => {\r\n    setRegisterForm({\r\n      ...registerForm,\r\n      [ev.target.name]: ev.target.value\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"page page--sign-up\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 offset-md-2 col-md-8 offset-lg-3 col-lg-6\">\r\n            <form onSubmit={(ev) => handleSubmit(ev)}>\r\n              {(passwordConfirmation) ? <div className=\"alert alert-danger\" role=\"alert\">{passwordConfirmation}</div> : ''}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"txtUsername\">Username</label>\r\n                <input required type=\"text\" className=\"form-control\" id=\"txtUsername\" name=\"txtUsername\" onChange={handleInputChange} value={registerForm.txtUsername} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"txtEmail\">Email address</label>\r\n                <input required type=\"email\" className=\"form-control\" id=\"txtEmail\" name=\"txtEmail\"  aria-describedby=\"emailHelp\" onChange={handleInputChange} value={registerForm.txtEmail} />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"txtPassword\">Password</label>\r\n                <input required type=\"password\" className=\"form-control\" id=\"txtPassword\" name=\"txtPassword\" onChange={handleInputChange} value={registerForm.txtPassword} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"txtPassword\">Confirm password</label>\r\n                <input required type=\"password\" className=\"form-control\" id=\"txtPassword\" name=\"txtConfirmPassword\" onChange={handleInputChange} value={registerForm.txtConfirmPassword} />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","import React, {} from 'react';\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\n\nimport { AuthProvider, FirebaseProvider, FirestoreProvider } from './services';\nimport { RouteWithLayout } from './utilities';\n\nimport { BaseLayout } from './layouts';\nimport { Home, MessagesPage, SignInPage, BookmarksPage, PokemonsPage, Register} from './pages';\n\nimport * as Routes from './routes';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <FirebaseProvider>\n        <AuthProvider>\n          <FirestoreProvider>\n            <Router basename={'/eindwerk-pgmgent-thibdema'}>\n              <Switch>\n                <RouteWithLayout exact path={Routes.LANDING} layout={ BaseLayout } component={ Home }/>\n                <Redirect from={Routes.HOME} to={Routes.LANDING}/>\n                <RouteWithLayout exact path={Routes.MESSAGES} layout={ BaseLayout } component={ MessagesPage }/>\n                <RouteWithLayout exact path={Routes.BOOKMARKS} layout={ BaseLayout } component={ BookmarksPage }/>\n                <RouteWithLayout exact path={Routes.POKEMONS} layout={ BaseLayout } component={ PokemonsPage }/>\n                <RouteWithLayout exact path={Routes.AUTH_SIGN_IN} layout={ BaseLayout } component={ SignInPage }/>\n                <RouteWithLayout exact path={Routes.REGISTER} layout={ BaseLayout } component={ Register }/>\n              </Switch>\n            </Router>\n          </FirestoreProvider>\n        </AuthProvider>\n      </FirebaseProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'jquery/dist/jquery.slim.min';\nimport 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}